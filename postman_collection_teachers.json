{
  "info": {
    "name": "InClass - Teachers & Lecturers",
    "description": "Teacher/Lecturer-specific endpoints for InClass Attendance System - Course management, session control, student management, attendance tracking, and reporting",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{teacherAuthToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "teacherAuthToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "registrationToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "courseId",
      "value": "",
      "type": "string"
    },
    {
      "key": "studentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "sessionId",
      "value": "",
      "type": "string"
    },
    {
      "key": "sessionCode",
      "value": "",
      "type": "string"
    },
    {
      "key": "targetTeacherId",
      "value": "",
      "type": "string"
    },
    {
      "key": "targetCourseId",
      "value": "",
      "type": "string"
    },
    {
      "key": "shareRequestId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Teacher Authentication",
      "item": [
        {
          "name": "1. Register Teacher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('registrationToken', response.registrationToken);",
                  "    pm.test('Registration token received', function () {",
                  "        pm.expect(response.registrationToken).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dr. Jane Smith\",\n  \"email\": \"teacher@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "2. Verify Registration OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('teacherAuthToken', response.token);",
                  "    pm.test('Teacher verified and token received', function () {",
                  "        pm.expect(response.token).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"teacher@example.com\",\n  \"otp\": \"123456\",\n  \"registrationToken\": \"{{registrationToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify"]
            }
          }
        },
        {
          "name": "3. Login Teacher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('teacherAuthToken', response.token);",
                  "    pm.test('Teacher login successful', function () {",
                  "        pm.expect(response.userType).to.eql('teacher');",
                  "        pm.expect(response.token).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"teacher@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "4. Request Password Reset OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"teacher@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/request-reset",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "request-reset"]
            }
          }
        },
        {
          "name": "5. Reset Password with OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"teacher@example.com\",\n  \"otp\": \"123456\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "reset-password"]
            }
          }
        }
      ]
    },
    {
      "name": "üéì Course Management",
      "item": [
        {
          "name": "1. Create Course",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('courseId', response.course._id);",
                  "    pm.test('Course created successfully', function () {",
                  "        pm.expect(response.course._id).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"course_code\": \"CS101\",\n  \"title\": \"Introduction to Computer Science\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses",
              "host": ["{{baseUrl}}"],
              "path": ["courses"]
            }
          }
        },
        {
          "name": "2. Get All My Courses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses",
              "host": ["{{baseUrl}}"],
              "path": ["courses"]
            }
          }
        },
        {
          "name": "3. Get Specific Course",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}"]
            }
          }
        },
        {
          "name": "4. Update Course",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Advanced Computer Science\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}"]
            }
          }
        },
        {
          "name": "5. Delete Course",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Student Management",
      "item": [
        {
          "name": "1. Add Student to Course",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('studentId', response.student._id);",
                  "    pm.test('Student added successfully', function () {",
                  "        pm.expect(response.student._id).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"matric_no\": \"CSC/2021/001\",\n  \"name\": \"Alice Johnson\",\n  \"email\": \"alice@student.edu\",\n  \"phone\": \"1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}/students",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}", "students"]
            }
          }
        },
        {
          "name": "2. Get Course Students",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}/students?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}", "students"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "3. Get Student Attendance History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}/students/{{studentId}}/attendance",
              "host": ["{{baseUrl}}"],
              "path": [
                "courses",
                "{{courseId}}",
                "students",
                "{{studentId}}",
                "attendance"
              ]
            }
          }
        },
        {
          "name": "4. Remove Student from Course",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}/students/{{studentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}", "students", "{{studentId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üìç Session Management",
      "item": [
        {
          "name": "1. Start Attendance Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('sessionId', response.session._id);",
                  "    pm.collectionVariables.set('sessionCode', response.session.session_code);",
                  "    pm.test('Session started successfully', function () {",
                  "        pm.expect(response.session._id).to.be.a('string');",
                  "        pm.expect(response.session.session_code).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lat\": 6.5244,\n  \"lng\": 3.3792,\n  \"radius_m\": 100,\n  \"duration_minutes\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}/sessions",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}", "sessions"]
            }
          }
        },
        {
          "name": "2. Get Course Sessions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/{{courseId}}/sessions?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "{{courseId}}", "sessions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "3. Get Session Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/{{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "{{sessionId}}"]
            }
          }
        },
        {
          "name": "4. Live Session Monitoring",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/{{sessionId}}/live",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "{{sessionId}}", "live"]
            }
          }
        },
        {
          "name": "5. End Session Early",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/{{sessionId}}/end",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "{{sessionId}}", "end"]
            }
          }
        }
      ]
    },
    {
      "name": "‚úÖ Attendance Management",
      "item": [
        {
          "name": "1. Get Session Attendance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/attendance/session/{{sessionId}}?page=1&limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["attendance", "session", "{{sessionId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          }
        },
        {
          "name": "2. Manual Mark Attendance",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{sessionId}}\",\n  \"matric_no\": \"CSC/2021/001\",\n  \"status\": \"manual_present\",\n  \"reason\": \"Late arrival - marked manually\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/attendance/manual",
              "host": ["{{baseUrl}}"],
              "path": ["attendance", "manual"]
            }
          }
        },
        {
          "name": "3. Test Student Attendance Submission",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_code\": \"{{sessionCode}}\",\n  \"matric_no\": \"CSC/2021/002\",\n  \"lat\": 6.5244,\n  \"lng\": 3.3792,\n  \"accuracy\": 10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/attendance/submit",
              "host": ["{{baseUrl}}"],
              "path": ["attendance", "submit"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Reports & Analytics",
      "item": [
        {
          "name": "1. Get Course Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/attendance/course/{{courseId}}/stats",
              "host": ["{{baseUrl}}"],
              "path": ["attendance", "course", "{{courseId}}", "stats"]
            }
          }
        },
        {
          "name": "2. Download Session CSV Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/{{sessionId}}/report.csv",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "{{sessionId}}", "report.csv"]
            }
          }
        },
        {
          "name": "3. Email Session CSV Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/{{sessionId}}/report.csv?email=true",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "{{sessionId}}", "report.csv"],
              "query": [
                {
                  "key": "email",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "4. Download Session PDF Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/{{sessionId}}/report.pdf",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "{{sessionId}}", "report.pdf"]
            }
          }
        },
        {
          "name": "5. Email Session PDF Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/{{sessionId}}/report.pdf?email=true",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "{{sessionId}}", "report.pdf"],
              "query": [
                {
                  "key": "email",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "6. Download Course CSV Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/attendance/course/{{courseId}}/report.csv",
              "host": ["{{baseUrl}}"],
              "path": ["attendance", "course", "{{courseId}}", "report.csv"]
            }
          }
        },
        {
          "name": "7. Download Course PDF Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/attendance/course/{{courseId}}/report.pdf",
              "host": ["{{baseUrl}}"],
              "path": ["attendance", "course", "{{courseId}}", "report.pdf"]
            }
          }
        }
      ]
    },
    {
      "name": "üîÑ Student Sharing (Multi-Teacher)",
      "item": [
        {
          "name": "1. Get Available Teachers",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.teachers && response.teachers.length > 0) {",
                  "        pm.collectionVariables.set('targetTeacherId', response.teachers[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student-sharing/teachers",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "teachers"]
            }
          }
        },
        {
          "name": "2. Get My Courses with Student Counts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student-sharing/my-courses",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "my-courses"]
            }
          }
        },
        {
          "name": "3. View Another Teacher's Students",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student-sharing/teachers/{{targetTeacherId}}/courses/{{targetCourseId}}/students",
              "host": ["{{baseUrl}}"],
              "path": [
                "student-sharing",
                "teachers",
                "{{targetTeacherId}}",
                "courses",
                "{{targetCourseId}}",
                "students"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "20",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "4. Request Students from Another Teacher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('shareRequestId', response.request._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"target_teacher_id\": \"{{targetTeacherId}}\",\n  \"course_id\": \"{{targetCourseId}}\",\n  \"target_course_id\": \"{{courseId}}\",\n  \"student_ids\": [\"{{studentId}}\"],\n  \"message\": \"Requesting to share student for collaborative course\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student-sharing/request",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "request"]
            }
          }
        },
        {
          "name": "5. Get Incoming Share Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student-sharing/incoming?status=pending&page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "incoming"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "6. Get Outgoing Share Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student-sharing/outgoing?status=all&page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "outgoing"],
              "query": [
                {
                  "key": "status",
                  "value": "all"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "7. Approve Share Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"approve\",\n  \"response_message\": \"Approved! Happy to share students for collaborative learning.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student-sharing/{{shareRequestId}}/respond",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "{{shareRequestId}}", "respond"]
            }
          }
        },
        {
          "name": "8. Reject Share Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"reject\",\n  \"response_message\": \"Sorry, cannot share these students at this time.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student-sharing/{{shareRequestId}}/respond",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "{{shareRequestId}}", "respond"]
            }
          }
        },
        {
          "name": "9. Cancel Outgoing Request",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student-sharing/{{shareRequestId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["student-sharing", "{{shareRequestId}}", "cancel"]
            }
          }
        }
      ]
    }
  ]
}
